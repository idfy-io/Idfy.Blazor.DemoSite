@using DemoSite.Shared;
@using Idfy.Signature;

<h6>Auth Before Sign</h6>

<div class="mat-layout-grid">
    <div class="mat-layout-grid-inner">
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
            <MatSelect Class="full-width no-margin" Outlined="true" Label="Mechanism" @bind-Value="AuthBeforeSignType">
                <MatOption Value=""></MatOption>
                @foreach (var value in Enum.GetValues(typeof(Idfy.Signature.AuthenticationMechanism)))
                {
                    <MatOption Value="value.ToString()">@value.ToString()</MatOption>
                }
            </MatSelect>
        </div>
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
            <MatTextField Class="full-width no-margin" Outlined="true" @bind-Value="SignerData.Authentication.SocialSecurityNumber" Label="SSN / National Id"></MatTextField>
        </div>
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
            <MatTextField Class="full-width no-margin" Outlined="true" @bind-Value="SignerData.Authentication.SignatureMethodUniqueId" Label="Unique Id"></MatTextField>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public DemoSigner SignerData { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (SignerData.Authentication == null) SignerData.Authentication = new Authentication();
    }

    string AuthBeforeSignType
    {
        get => SignerData?.Authentication?.Mechanism?.ToString();
        set
        {
            if (Enum.TryParse(value, out AuthenticationMechanism mech))
            {
                SignerData.Authentication.Mechanism = mech;
            }
        }
    }
}
