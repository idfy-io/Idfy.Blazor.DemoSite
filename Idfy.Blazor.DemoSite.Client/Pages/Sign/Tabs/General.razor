@using Signature;
@using Services;
@inject DocumentService DocumentService;
@using Idfy.Blazor.DemoSite.Shared;


<div class="app-padding">

    <div class="doc-status">
        <p>Document status</p>
        <h3>@(Document.Status?.DocumentStatus.ToString() ?? "Not created yet")</h3>
        @if (Document.Status != null)
        {
            <p> @Document.Signers.Count(s => s.DocumentSignature != null) / @(Document.Advanced.RequiredSignatures) required signatures received</p>
        }
    </div>

    <MatTextField @bind-Value="@Document.ExternalId" Label="External Id" Outlined="true"></MatTextField>

    <p>Contact Info</p>
    <MatTextField Icon="business" @bind-Value="@Document.ContactDetails.Name" Label="Company name" Outlined="true"></MatTextField>
    <MatTextField Icon="local_phone" @bind-Value="@Document.ContactDetails.Phone" Label="Phone" Outlined="true"></MatTextField>
    <MatTextField Icon="email" @bind-Value="@Document.ContactDetails.Email" Label="Email" Outlined="true"></MatTextField>
    <MatTextField Icon="home" @bind-Value="@Document.ContactDetails.Url" Label="Url" Outlined="true"></MatTextField>
    <SignersList OnExecuteWithErrorHandler="OnExecuteWithErrorHandler" Signers="Document.Signers"></SignersList>
</div>



@code {

    protected DemoDocument Document;

    [Parameter]
    public EventCallback<Task>
    OnExecuteWithErrorHandler { get; set; }

    protected override async Task OnInitializedAsync()
    {
    Document = DocumentService.Document;
    }


    }
