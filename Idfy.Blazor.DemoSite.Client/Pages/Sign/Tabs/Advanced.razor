@using Idfy.Blazor.DemoSite.Shared;
@using Services;
@inject DocumentService DocumentService;

<div class="app-padding">
    <div class="mat-layout-grid">
        <div class="mat-layout-grid-inner">

            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                <MatTextField @bind-Value="@Document.Advanced.CreatedByApplication" Label="Created by" FullWidth="true"></MatTextField>
            </div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                <MatTextField @bind-Value="@Document.Advanced.DepartmentId" Label="Department Id" FullWidth="true"></MatTextField>
            </div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                <MatNumericUpDownField Label="Required signatures"
                                       @bind-Value ="@RequiredSignatures"
                                       DecimalPlaces=0
                                       Outlined="true"
                                       Minimum=0 Maximum=null>
                </MatNumericUpDownField>
            </div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                <MatSlideToggle @bind-Checked="@Document.Advanced.GetSocialSecurityNumber"></MatSlideToggle> <span>Get soc sec</span>
            </div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                <Idfy.Blazor.DemoSite.Client.Components.DynamicChipList ChipList="Document.Advanced.Tags" Icon="label" Title="Tags"></Idfy.Blazor.DemoSite.Client.Components.DynamicChipList>
            </div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                <h3 class="app-title">Lifetime</h3>
            </div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                <MatDatePicker @bind-Value="@Document.Advanced.TimeToLive.Deadline"></MatDatePicker>
            </div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                <MatNumericUpDownField Label="Delete after hours"
                                       @bind-Value="DeleteAfterHours"
                                       DecimalPlaces=0
                                       Outlined="true"
                                       Minimum=1 Maximum=null>
                </MatNumericUpDownField>
            </div>
        </div>
    </div>

</div>

@code {
    protected DemoDocument Document;

    protected override async Task OnInitAsync()
    {
        Document = DocumentService.Document;
    }

    private decimal? RequiredSignatures
    {
        get
        {
            return (decimal?)Document.Advanced.RequiredSignatures;
        }
        set
        {
            Document.Advanced.RequiredSignatures = (int) (value ?? 0);
        }
    }

    private decimal? DeleteAfterHours
    {
        get
        {
            return (decimal?)(Document.Advanced.TimeToLive.DeleteAfterHours ?? 1);
        }
        set
        {
            Document.Advanced.TimeToLive.DeleteAfterHours = (int?) value;
        }
    }
}
