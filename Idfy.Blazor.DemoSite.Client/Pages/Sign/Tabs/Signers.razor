@using Services;
@using Idfy.Blazor.DemoSite.Shared

@inject DocumentService DocumentService;


<div class="app-padding">
    <MatAccordion Multi="true">
        @foreach (var signer in DocumentService.Document.Signers)
        {
            <Idfy.Blazor.DemoSite.Client.Pages.Sign.Tabs.Signer.Signer SignerData="@signer"
                                                                       OnExecuteWithErrorHandler="@OnExecuteWithErrorHandler">
            </Idfy.Blazor.DemoSite.Client.Pages.Sign.Tabs.Signer.Signer> 
        }
    </MatAccordion>

    @if (DocumentService.Document.Status?.DocumentStatus != Signature.DocumentStatus.Signed)
    {
        <MatButton Class="full-width btn-margin" OnClick="@AddSigner" TrailingIcon="tag_faces">Add new</MatButton>
    }
</div>



@code {
    List<DemoSigner> SignerList;
    [Parameter]
    public EventCallback<Task> OnExecuteWithErrorHandler { get; set; }

    protected override async Task OnInitializedAsync()
    {
        SignerList = DocumentService.Document.Signers;
    }

    protected async Task AddSigner()
    {
        await OnExecuteWithErrorHandler.InvokeAsync( DocumentService.AddSigner());
    }


}
